// Generated by CoffeeScript 1.6.3
(function() {
  var app, db, express, mongo, port, _;

  express = require("express");

  app = express();

  mongo = require('mongodb');

  db = require("mongojs").connect("mongodb://127.0.0.1/Hammerzeit", ["players"]);

  _ = require("underscore");

  port = process.env.PORT || 5000;

  app.listen(port, function() {
    return console.log("listening on " + port);
  });

  app.configure(function() {
    app.use(express.logger("dev"));
    app.set("views", __dirname + "/views");
    app.set("view engine", "jade");
    app.use(express.cookieParser());
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(app.router);
    return app.use(express["static"](__dirname + "/public"));
  });

  app.get("/", function(req, res) {
    return res.render("index");
  });

  app.put("/users/:name", function(req, res) {
    var _this = this;
    return db.players.update({
      username: req.params.name
    }, _.omit(req.body, "_id"), function(err, updated) {
      console.log(req.body);
      if (!err) {
        return res.json(req.body);
      }
    });
  });

  app.post("/users/:name", function(req, res) {
    var password, username,
      _this = this;
    password = req.body.password;
    username = req.params.name;
    console.log(req.body);
    return db.players.findAndModify({
      query: {
        username: username
      },
      update: {
        $setOnInsert: req.body
      },
      "new": true,
      upsert: true
    }, function(err, updated) {
      if (!err) {
        return res.json(updated);
      }
    });
  });

  app.get("/users/:name", function(req, res) {
    return db.players.findOne({
      username: req.params.name
    }, function(err, found) {
      if (!err) {
        return res.json(found);
      }
    });
  });

}).call(this);
